:root {
  /* --button-default-bg: #2196F3; */ /* Default Blue - REMOVED TO AVOID CONFLICTS */
  /* --button-default-hover-brightness: 85%; */ /* REMOVED */
  --button-active-bg: #4CAF50; /* Green - Keep for active state reference */
  --button-error-bg: #ff9800; /* Orange */
  --button-error-hover-bg: #fb8c00;

  /* These seem specific and might be okay if still used by #toggleFetchingBtn and #toggleVisibilityBtn directly */
  --button-fetch-start-bg: #87CEEB; /* Light Sky Blue */
  --button-fetch-stop-bg: #ADD8E6; /* Lighter Blue */
  --button-visibility-show-bg: #90ee90; /* Light Green */
  --button-visibility-hide-bg: #32cd32; /* Lime Green */
  
  /* --button-time-cycle-bg: #1565C0; */ /* Darker Blue for Time Cycle Button - REMOVED (old button) */
  /* --button-time-cycle-hover-brightness: 85%; */ /* REMOVED */

  --text-color-light: white;
  --text-color-dark: #333;
  --popup-bg: #f9f9f9;
  --container-bg: #fff;
  --border-color: #eee;

  /* Variables for new .controls button styling - for clarity */
  --popup-button-default-bg: #f0f0f0; /* Light Grey for default buttons in .controls */
  --popup-button-default-text: #333;   /* Dark Grey text for default buttons */
  --popup-button-default-border: #ccc;
  --popup-button-hover-bg: #e0e0e0;    /* Slightly darker grey on hover */

  --popup-button-active-bg: #4CAF50;   /* Green for active buttons */
  --popup-button-active-text: white;
  --popup-button-active-border: #45a049;
}

body {
  font-family: sans-serif;
  width: 280px;
  padding: 1px 5px;
  font-size: 13px;
  background-color: var(--popup-bg);
  color: var(--text-color-dark);
}

/* General button styles - Applied to all buttons unless overridden */
button {
  width: 100%;
  padding: 6px;
  margin-top: 4px;
  border: 1px solid var(--popup-button-default-border, #ccc); /* Default border */
  border-radius: 4px;
  color: var(--popup-button-default-text, #333); /* Default text color */
  background-color: var(--popup-button-default-bg, #f0f0f0); /* Default background */
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.2s ease-in-out, filter 0.2s ease-in-out;
  box-sizing: border-box; /* Ensure padding and border are part of the width/height */
}

button:hover {
  background-color: var(--popup-button-hover-bg, #e0e0e0);
  filter: none; /* Remove brightness filter if general hover is background change */
}


/* Styles for buttons DIRECTLY inside .controls or .button-group */
/* These will override the general button style if more specific or loaded later */
.controls button,
.button-group button {
  background-color: var(--popup-button-default-bg); 
  color: var(--popup-button-default-text);
  border: 1px solid var(--popup-button-default-border);
  margin-top: 3px;
}

.button-group button {
  margin-top: 1; /* Buttons in a group have no top margin */
  flex-grow: 1;
}

.controls button:hover,
.button-group button:hover {
  background-color: var(--popup-button-hover-bg);
}

/* Active button style - This should be the primary one used by JS */
/* Applied to #toggleFetchingBtn, #toggleVisibilityBtn, and buttons in .button-group */
button.active-button {
  background-color: var(--popup-button-active-bg) !important; /* Green */
  color: var(--popup-button-active-text) !important; /* White text */
  border-color: var(--popup-button-active-border) !important; /* Darker green border */
}

/* Specific styles for Fetching/Visibility buttons if they differ beyond active/default */
/* For example, if their non-active, non-hover states are unique colors */
#toggleFetchingBtn {
  /* Default state will use .controls button style (grey) */
  /* Active state will use .active-button (green) */
}

#toggleVisibilityBtn {
  /* Default state will use .controls button style (grey) */
  /* Active state will use .active-button (green) */
}

/* Error state for any button */
button.error {
  background-color: var(--button-error-bg) !important;
  color: var(--text-color-light) !important;
}
button.error:hover {
  background-color: var(--button-error-hover-bg) !important;
}


.info-item {
  margin-bottom: 6px;
}

.info-item strong {
  display: inline-block;
  min-width: 50px;
  color: #555; /* Consider var(--text-color-dark-secondary) if defined */
}

#videoInfo div {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 2px 0;
}

.status {
  font-size: 11px;
  color: #777;
  text-align: center;
  margin-bottom: 8px;
  padding: 3px;
  border-radius: 3px;
}

.status.error {
  color: #f44336;
  background-color: #ffebee;
  font-weight: bold;
}

.container {
  margin-bottom: 10px;
  padding: 2px;
  border-radius: 4px;
  background-color: var(--container-bg);
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

h3, h4 {
  margin: 0 0 2px 0;
  font-size: 14px;
  color: var(--text-color-dark);
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 4px;
}

/* Preview styles */
.preview {
  padding: 8px;
  margin-bottom: 8px;
  border-radius: 4px;
  background-color: rgba(0, 0, 0, 0.7);
  color: var(--text-color-light);
}

.preview.greenscreen {
  background-color: rgb(0, 177, 64);
}

.preview .title {
  font-size: 14px;
  font-weight: bold;
  margin-bottom: 4px;
}

.preview .series {
  font-size: 12px;
  opacity: 0.9;
  margin-bottom: 4px;
}

.preview .time {
  font-size: 14px;
  font-weight: bold;
  font-family: 'Courier New', monospace;
}

.preview.greenscreen .title,
.preview.greenscreen .series,
.preview.greenscreen .time {
  color: black;
  text-shadow: 0px 0px 2px white;
}

/* Mode Buttons Default Styles */
#setNormalModeBtn,
#setCompactModeBtn,
#toggleGreenscreenModeBtn { /* This ID might be unused if greenscreen is part of theme select */
  /* background-color: var(--button-default-bg); */ /* REMOVED - covered by .controls button */
}

/* Active Mode Button Style */
/* button.active-mode { */ /* REMOVED - Consolidated to .active-button */
  /* background-color: var(--button-active-bg) !important; */ 
/* } */

/* Time Cycle Button */
#cycleTimeDisplayModeBtn {
  /* background-color: var(--button-time-cycle-bg); */ /* REMOVED - Old button */
}
/* #cycleTimeDisplayModeBtn:hover { */ /* REMOVED */
  /* filter: brightness(var(--button-time-cycle-hover-brightness)); */
/* } */

.controls-section {
  margin-top: 15px;
  padding-top: 10px;
  border-top: 1px solid var(--border-color);
  color: var(--popup-text-color, #333);
}

.thanks-section {
  margin-top: 2px;
  padding : 0px;
  text-align: center;
  font-size: 0.8em;
  color: #616060;
}

.thanks-section p {
  margin: 0px;
}

.thanks-section strong {
    font-weight: normal;
    color: var(--text-color-dark);
}

/* 기본 컨테이너 및 제어 그룹 스타일 */
body {
  font-family: sans-serif;
  width: 280px; /* 팝업 너비 고정 또는 필요에 따라 조절 */
  padding: 0px 0px;
  margin : 0px;
  background-color: var(--popup-bg-color, #f9f9f9);
  color: var(--popup-text-color, #333);
}

.container {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

h2 {
  text-align: center;
  margin-top: 0;
  margin-bottom: 5px;
  color: var(--popup-header-color, #1a73e8);
}

.status-section, .controls, .info-section, .thanks-section {
  padding: 6px;
  border: 1px solid var(--popup-border-color, #ddd);
  border-radius: 4px;
  background-color: var(--popup-section-bg-color, #fff);
}

/* Combined .controls button and select styles */
.controls button,
.controls select {
  width: 100%;
  padding: 6px;
  margin-top: 3px;
  box-sizing: border-box;
  border: 1px solid var(--popup-button-default-border, #ccc); /* Use refined var */
  border-radius: 3px;
  background-color: var(--popup-button-default-bg, #f0f0f0); /* Use refined var */
  color: var(--popup-button-default-text, #333); /* Use refined var */
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.controls button:hover,
.controls select:hover /* Added select hover */ {
  background-color: var(--popup-button-hover-bg, #e0e0e0); /* Use refined var */
}

/* 활성화된 버튼 스타일 - This is the primary active style */
.controls button.active-button {
  background-color: var(--popup-button-active-bg, #4CAF50); 
  color: var(--popup-button-active-text, white);
  border-color: var(--popup-button-active-border, #45a049);
}

.control-group {
  margin-bottom: 5px;
}

.control-group label {
  display: block;
  margin-bottom: 3px;
  font-weight: bold;
  font-size: 0.9em;
}

/* 버튼 그룹 (모드, 위치 변경용) */
.button-group {
  display: flex;
  gap: 2px; /* 버튼 간 간격 */
}

.button-group button {
  flex-grow: 1; /* 버튼들이 공간을 균등하게 차지하도록 */
  margin-top: 0; /* 버튼 그룹 내에서는 상단 마진 제거 */
}

/* 드롭다운 메뉴 스타일 */
.controls select {
  background-color: var(--popup-select-bg-color, #fff);
  /* 필요시 추가 스타일링 */
}

.info-section p, .thanks-section p {
  margin: 5px 0;
  font-size: 0.9em;
}

.info-section strong {
  color: var(--popup-info-strong-color, #555);
}

.status-section strong {
    font-weight: bold;
}

#statusText {
    font-style: italic;
}

hr {
  border: none;
  border-top: 1px solid var(--popup-hr-color, #eee);
  margin: 10px 0;
}

/* 기존의 .active-mode, .active 등은 .active-button 으로 통합 고려 */
/* 예시: .active-mode를 .active-button으로 변경하거나, .active-mode 스타일을 .active-button에 맞게 조정 */

/* iOS Toggle Switch Styles */
.switch {
  position: relative;
  display: inline-block;
  width: 40px; /* 너비 조정 */
  height: 22px; /* 높이 조정 */
  margin-left: 5px; /* 필요시 여백 조정 */
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px; /* 핸들 높이 조정 */
  width: 16px; /* 핸들 너비 조정 */
  left: 3px; /* 핸들 위치 조정 */
  bottom: 3px; /* 핸들 위치 조정 */
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #4CAF50; /* 활성 시 배경색 */
}

input:focus + .slider {
  box-shadow: 0 0 1px #4CAF50;
}

input:checked + .slider:before {
  -webkit-transform: translateX(18px); /* 핸들 이동 거리 조정 */
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 10px; /* 높이에 맞게 조정 */
}

.slider.round:before {
  border-radius: 50%;
}

/* Font Size Control Styles */
.font-size-control {
  display: flex;
  align-items: center;
  margin-bottom: 2px;
}

.font-size-control label {
  flex-grow: 1;
  font-weight: normal; /* 다른 라벨과 통일 */
  font-size: 0.9em;
  margin-bottom: 0;
}

.font-size-control .value {
  min-width: 14px; /* 값 표시 공간 */
  text-align: center;
  font-weight: bold;
  margin: 0 2px;
}

.font-size-control button {
  width: auto; /* 자동 너비 */
  min-width: 25px; /* 최소 너비 */
  padding: 3px 2px; /* 내부 여백 조정 */
  font-size: 1em; /* 텍스트 크기 */
  margin-top: 0; /* 상단 마진 제거 */
  line-height: 1; /* 줄 높이 조정 */
}

/* Styles for specific control groups if needed */
.visibility-control-group {
  display: flex;            /* Enable flexbox */
  align-items: center;      /* Vertically center items */
  justify-content: space-between; /* Push label and switch to opposite ends */
  padding: 6px 0; /* Add some padding like other control groups if needed, or adjust parent's padding */
}

.visibility-control-group .control-label {
  margin-bottom: 0; /* Remove default bottom margin from general control-group label */
  /* font-weight: bold; /* Already set by general .control-group label if that's still desired */
  /* font-size: 0.9em; /* Already set by general .control-group label */
}

.visibility-control-group .switch {
  margin-left: auto; /* Push switch to the right if space-between is not enough or label text varies */
  /* margin-left: 10px; /* Or a fixed margin if preferred over auto/space-between */
}

.mode-control-group {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 6px 0; /* Consistent padding */
}

.mode-control-group .control-label {
  margin-bottom: 0;
  white-space: nowrap; /* Prevent label text from wrapping */
}

.mode-control-group .button-group {
  margin-left: auto; /* Push button group to the right */
  display: flex; /* Ensure buttons inside are also flex items if needed */
  gap: 5px; /* Space between buttons in the group, already defined in general .button-group */
}

.compact-mode-control-group {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 6px 0; /* Consistent padding */
}

.compact-mode-control-group .control-label {
  margin-bottom: 0;
  white-space: nowrap;
}

.compact-mode-control-group .switch {
  margin-left: auto;
}

/* 새로운 드롭다운 그룹 스타일 */
.dropdown-control-group {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 6px; /* 기존 control-group과 동일하게 유지 또는 조정 */
}

.dropdown-control-group label {
  margin-bottom: 0; /* flex 사용으로 인해 불필요 */
  margin-right: 8px; /* 드롭다운과의 최소 간격 */
  white-space: nowrap;
}

.dropdown-control-group .control-select {
  flex-grow: 1; /* 가능한 공간을 채우도록 함 */
  padding: 4px 6px; /* 패딩 축소 */
  margin: 0; /* 추가 마진 제거 */
  min-width: 100px; /* 너무 작아지지 않도록 최소 너비 설정 */
}

/* 왼쪽 열 레이블 너비 통일 */
.dropdown-control-group label,
.control-group label[for="sliderOffset"], /* 위치 여백 레이블 특정 */
.control-group label[for="sliderOverlayWidth"] /* 너비 조절 레이블 특정 */ {
  display: inline-block; /* 너비 적용을 위해 */
  min-width: 52px; /* 모든 레이블이 가질 최소 너비 (값은 조절 가능) */
  /* text-align: right; */ /* 필요시 우측 정렬 */
  margin-right: 1px; /* 오른쪽 요소와의 간격 보장 */
}

/* 위치 여백 컨트롤 그룹 스타일 */
.offset-input-group, /* 기존 스타일 */
.width-input-group /* 새로운 너비 그룹에도 동일 스타일 적용 */ {
  display: flex;
  align-items: center;
  justify-content: space-between; /* 요소들을 양쪽으로 분산 */
  margin-bottom: 6px;
}

.offset-input-group label, /* 기존 스타일 */
.width-input-group label /* 새로운 너비 그룹 레이블에도 적용 */ {
  /* min-width는 이미 위에서 .control-group label[for="sliderOverlayWidth"] 규칙으로 적용됨 */
  margin-bottom: 0; /* flex 아이템이므로 하단 마진 불필요 */
  white-space: nowrap;
  flex-shrink: 0; /* 레이블 너비 고정 */
}

.offset-input-group .control-slider, /* 기존 스타일 */
.width-input-group .control-slider /* 새로운 너비 그룹 슬라이더에도 적용 */ {
  flex-grow: 0.2; /* 슬라이더가 차지하는 공간을 줄임 */
  margin: 0 1px; /* 좌우 여백 추가 */
}

.offset-input-group .control-offset-input, /* 기존 스타일 */
.width-input-group .control-offset-input /* 새로운 너비 그룹 숫자 입력에도 적용 */ {
  width: 35px; /* 숫자 입력 필드 너비 통일 (기존 20px에서 약간 늘림, 필요시 40px) */
  padding: 4px;
  text-align: right;
  border: 1px solid var(--popup-button-default-border, #ccc);
  border-radius: 3px;
  margin: 0;
}

/* Webkit 기반 브라우저 (Chrome, Safari 등) 에서 스피너 숨기기 */
.offset-input-group .control-offset-input::-webkit-outer-spin-button,
.offset-input-group .control-offset-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.offset-input-group .unit-px, /* 기존 스타일 */
.width-input-group .unit-px /* 새로운 너비 그룹 단위 표시에도 적용 */ {
  font-size: 0.9em;
  white-space: nowrap;
  flex-shrink: 0; /* "px" 텍스트 너비 고정 */
}

/* 슬라이더 전체를 감싸는 control-group 에도 flex 적용 (선택적) */
.control-group label[for="sliderOffset"] {
  /* 이미 dropdown-control-group label에서 min-width가 적용되었으므로 */
  /* 여기서는 특별한 추가 스타일이 필요 없을 수 있음. */
  /* 만약 슬라이더와의 정렬을 맞추려면 부모 .control-group에 flex를 적용해야 함. */
  /* 예: .control-group (슬라이더를 포함하는 그룹) { display: flex; align-items: center; } */
} 